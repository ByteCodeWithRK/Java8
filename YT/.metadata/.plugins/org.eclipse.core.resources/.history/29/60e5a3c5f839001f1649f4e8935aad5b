package com.java8.functional;

import java.util.function.UnaryOperator;

public class UnaryAndBinaryFunctionalInterfaceEx {

	public static void main(String[] args) {
		
		//UnaryOperator:
		/*
		 * 1. An operator which takes single value and return single value of 
		 *    same type.
		 * 2. Available in java.util.function package
		 * 3. Sub interface of Function functional interface
		 */
		 //It has 2 method
		//1. apply();
		unaryOperatorWithAbstractMethod();
		
		//2. identity() : return input value as result
		unaryOperatorWithStaticMethod();
		
		

	}

	private static void unaryOperatorWithStaticMethod() {
		UnaryOperator<Integer> u1 = UnaryOperator.identity();
		System.out.println("UnaryOperator::Static::Identity::"
						+u1.apply(10));

		
	}

	private static void unaryOperatorWithAbstractMethod() {
		UnaryOperator<Integer> u1 = (param1) ->{
			return param1*10;
		};
		System.out.println("UnaryOperator::abstract::apply::"+u1.apply(5));
	}

}
